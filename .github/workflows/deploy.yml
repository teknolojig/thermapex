name: Deploy to Coolify

on:
  push:
    branches: [main, production]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '20'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run linter
        run: npm run lint
      
      - name: Generate Prisma Client
        run: npx prisma generate
      
      - name: Run type check
        run: npx tsc --noEmit
      
      - name: Build application
        run: npm run build
        env:
          DATABASE_URL: "file:./test.db"
          NEXTAUTH_SECRET: "test-secret"
          NEXTAUTH_URL: "http://localhost:3000"
          JWT_SECRET: "test-jwt-secret"

  docker:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: thermapex:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Test Docker image
        run: |
          docker run -d -p 3000:3000 \
            -e DATABASE_URL="file:./test.db" \
            -e NEXTAUTH_SECRET="test-secret" \
            -e NEXTAUTH_URL="http://localhost:3000" \
            -e JWT_SECRET="test-jwt-secret" \
            --name thermapex-test \
            thermapex:latest
          
          sleep 10
          curl -f http://localhost:3000/api/health || exit 1
          docker stop thermapex-test